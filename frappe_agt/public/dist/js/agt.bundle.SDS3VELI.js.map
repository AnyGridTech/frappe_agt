{
  "version": 3,
  "sources": ["../../../../../apps/frappe_agt/frappe_agt/public/ts/utils/brazil/cnpj.ts", "../../../../../apps/frappe_agt/frappe_agt/public/ts/utils/brazil/cpf.ts", "../../../../../apps/frappe_agt/frappe_agt/public/ts/utils/brazil/cpf_cnpj.ts", "../../../../../apps/frappe_agt/frappe_agt/public/ts/utils/db/index.ts"],
  "sourcesContent": ["frappe.provide('agt.utils.brazil.cnpj');\n\nagt.utils.brazil.cnpj.regex = /^(?!00\\.000\\.000\\/0000\\-00)(\\d{2}\\.\\d{3}\\.\\d{3}\\/\\d{4}\\-\\d{2})$/;\n\nagt.utils.brazil.cnpj.validate = function (frm, cnpj_field) {\n  let cnpj = frm.doc[cnpj_field] || '';\n  cnpj = cnpj.replace(/\\D/g, '');\n\n  if (cnpj.length !== 14) {\n    frappe.msgprint(__('CNPJ must have 14 digits.'));\n    frm.set_value(cnpj_field, '');\n    return;\n  }\n\n  // Eliminate known invalid CNPJs\n  if (agt.utils.brazil.cnpj.regex.test(cnpj)) {\n    frappe.msgprint(__('Invalid CNPJ number.'));\n    frm.set_value(cnpj_field, '');\n    return;\n  }\n\n  // Validate verification digits\n  let length = cnpj.length - 2;\n  let numbers = cnpj.substring(0, length);\n  let digits = cnpj.substring(length);\n  let sum = 0;\n  let pos = length - 7;\n\n  for (let i = length; i >= 1; i--) {\n    sum += parseInt(numbers.charAt(length - i)) * pos--;\n    if (pos < 2) pos = 9;\n  }\n\n  let result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n  if (result !== parseInt(digits.charAt(0))) {\n    frappe.msgprint(__('Invalid CNPJ number.'));\n    frm.set_value(cnpj_field, '');\n    return;\n  }\n\n  length += 1;\n  numbers = cnpj.substring(0, length);\n  sum = 0;\n  pos = length - 7;\n\n  for (let i = length; i >= 1; i--) {\n    sum += parseInt(numbers.charAt(length - i)) * pos--;\n    if (pos < 2) pos = 9;\n  }\n\n  result = sum % 11 < 2 ? 0 : 11 - (sum % 11);\n  if (result !== parseInt(digits.charAt(1))) {\n    frappe.msgprint(__('Invalid CNPJ number.'));\n    frm.set_value(cnpj_field, '');\n    return;\n  }\n\n  // If valid, format the CNPJ\n  agt.utils.brazil.cnpj.format(frm, cnpj_field);\n}\n\nagt.utils.brazil.cnpj.format = function (frm, cnpj_field) {\n  let cnpj = frm.doc[cnpj_field] || '';\n  cnpj = cnpj.replace(/\\D/g, '');\n\n  if (cnpj.length === 14) {\n    frm.set_value(cnpj_field, cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5'));\n  }\n}", "frappe.provide('agt.utils.brazil.cpf');\n\nagt.utils.brazil.cpf.regex = /^(?!000\\.000\\.000\\-00)(\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2})$/;\n\nagt.utils.brazil.cpf.validate = function(frm, cpf_field) {\n  let cpf = frm.doc[cpf_field] || '';\n  cpf = cpf.replace(/\\D/g, '');\n\n  if (cpf.length !== 11) {\n    frappe.msgprint(__('CPF must have 11 digits.'));\n    frm.set_value(cpf_field, '');\n    return;\n  }\n  \n  // Eliminate known invalid CPFs\n  if (agt.utils.brazil.cpf.regex.test(cpf)) {\n    frappe.msgprint(__('Invalid CPF number.'));\n    frm.set_value(cpf_field, '');\n    return;\n  }\n\n  // Validate verification digits\n  let sum = 0;\n  let remainder;\n\n  for (let i = 1; i <= 9; i++) {\n    sum += parseInt(cpf.substring(i - 1, i)) * (11 - i);\n  }\n\n  remainder = (sum * 10) % 11;\n  if (remainder === 10 || remainder === 11) remainder = 0;\n  if (remainder !== parseInt(cpf.substring(9, 10))) {\n    frappe.msgprint(__('Invalid CPF number.'));\n    frm.set_value(cpf_field, '');\n    return;\n  }\n\n  sum = 0;\n  for (let i = 1; i <= 10; i++) {\n    sum += parseInt(cpf.substring(i - 1, i)) * (12 - i);\n  }\n\n  remainder = (sum * 10) % 11;\n  if (remainder === 10 || remainder === 11) remainder = 0;\n  if (remainder !== parseInt(cpf.substring(10, 11))) {\n    frappe.msgprint(__('Invalid CPF number.'));\n    frm.set_value(cpf_field, '');\n    return;\n  }\n\n  // If valid, format the CPF\n  agt.utils.brazil.cpf.format(frm, cpf_field);\n}\n\nagt.utils.brazil.cpf.format = function(frm, cpf_field) {\n  let cpf = frm.doc[cpf_field] || '';\n  cpf = cpf.replace(/\\D/g, '');\n\n  if (cpf.length === 11) {\n    frm.set_value(cpf_field, cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4'));\n  }\n}", "frappe.provide('frappe_agt.utils.brazil')\n\nagt.utils.brazil.format_cnpj_or_cpf = function(frm, field, documentType) {\n  if (documentType === 'cpf') {\n    agt.utils.brazil.cpf.format(frm, field);\n  } else if (documentType === 'cnpj') {\n    agt.utils.brazil.cnpj.format(frm, field);\n  }\n  // If not sure, format based on length\n\n  let value = frm.doc[field] || '';\n  value = value.replace(/\\D/g, '');\n\n  if (value.length === 11) {\n    agt.utils.brazil.cpf.format(frm, field);\n  } else if (value.length === 14) {\n    agt.utils.brazil.cnpj.format(frm, field);\n  }\n}\n\nagt.utils.brazil.validate_cnpj_or_cpf = function(frm, field, documentType) {\n  if (documentType === 'cpf') {\n    agt.utils.brazil.cpf.validate(frm, field);\n  } else if (documentType === 'cnpj') {\n    agt.utils.brazil.cnpj.validate(frm, field);\n  }\n\n  let value = frm.doc[field] || '';\n  value = value.replace(/\\D/g, '');\n\n  if (value.length === 11) {\n    agt.utils.brazil.cpf.validate(frm, field);\n  } else if (value.length === 14) {\n    agt.utils.brazil.cnpj.validate(frm, field);\n  }\n}", "frappe.provide('agt.db');\n\nagt.db.filter_join = async function (steps) {\n  // TODO LUIGI: Fix the typing error here\n  let results = [] as any[];\n\n  for (let i = 0; i < steps.length; i++) {\n    const step = steps[i];\n    if (!step) continue;\n    const filters = { ...step.filters };\n    if (i > 0 && step.joinOn && results.length > 0) {\n      if (!step.joinOn) {\n        console.warn(`Join step ${i + 1} is missing joinOn details. Skipping join.`);\n        continue;\n      }\n      const joinOn = step.joinOn;\n      const joinValues = results.map(item => item[joinOn.sourceField]);\n      filters[joinOn.targetField] = [\"in\", joinValues];\n    }\n    if (step.joinOn && results.length === 0) {\n      console.warn(`No results found for step ${i + 1}. Skipping further joins.`);\n      break; // No results to join on, exit early\n    }\n    const response = await frappe.call({\n      method: \"backend_get_all\",\n      args: {\n        doctype: step.doctype,\n        filters: filters,\n        fields: step.fields,\n      }\n    });\n    results = response.message.data || [];\n  }\n\n  return results;\n}"],
  "mappings": "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",
  "names": []
}
